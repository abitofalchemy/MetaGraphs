dir()
cwd()
workingdir()
cwd
ls()
dir(../imdb_data/)
dir("../imdb_data/")
dir("../")
""require(igraph)
# Load the data. The data needs to be loaded as a table first:
bsk<-read.table("../imdb_data/imdb.ig")
bsk.network<-graph.data.frame(bsk, directed=F) #the 'directed' attribute specifies whether the edges are directed
require(igraph)
# Load the data. The data needs to be loaded as a table first:
bsk<-read.table("../imdb_data/imdb.ig")
bsk.network<-graph.data.frame(bsk, directed=F)
V(bsk.network) #prints the list of vertices (people)
E(bsk.network) #prints the list of edges (relationships)
degree(bsk.network) #print the number of edges per vertex (relationships per people)
plot(bsk.network)
bsk<-read.table("../imdb_data/imdb_100.ig")
bsk.network<-graph.data.frame(bsk, directed=F) #the 'directed' attribute specifies whether the edges are directed
plot(bsk.network)
g2 <- induced.subgraph(bsk.network, 1:10)
> plot(g2)
>
g2 <- induced.subgraph(bsk.networ, 1:10)
g2 <- induced.subgraph(bsk.network, 1:10)
plot(g2)
g2 <- induced.subgraph(bsk.network, 1:120)
plot(g2)
bsk<-read.table("../imdb_data/imdb.ig")
bsk.network<-graph.data.frame(bsk, directed=F) #the 'directed' attribute specifies whether the edges are directed
plot(bsk.network)
bsk<-read.table("../imdb_data/imdb_100.ig")
bsk.network<-graph.data.frame(bsk, directed=F) #the 'directed' attribute specifies whether the edges are directed
plot(bsk.network)
bsk<-read.table("../imdb_data/imdb_100.ig")
bsk.network<-graph.data.frame(bsk, directed=F) #the 'directed' attribute specifies whether the edges are directed
plot(bsk.network)
setwd('/data/saguinag/MetaGraphs/')
## Read imdb.tsv fil
imdb <- read.csv("imdb_data/imdb.tsv", sep="\t", header=TRUE)#,nrows=1000)
head(imdb)
setwd('/data/saguinag/MetaGraphs/')
## Read imdb.tsv fil
imdb <- read.csv("imdb_data/imdb.tsv", sep="\t", header=TRUE)#,nrows=1000)
head(imdb)
imdb <- read.csv("imdb_data/imdb.tsv", sep="\t", header=TRUE)
imdb <- read.csv("imdb_data/imdb.csv", sep=",", header=TRUE)
imdb <- read.csv("imdb_data/imdb.tsv", sep="\t", header=TRUE)
